// Code generated by protoc-gen-go.
// source: authorization.proto
// DO NOT EDIT!

/*
Package authorization is a generated protocol buffer package.

It is generated from these files:
	authorization.proto

It has these top-level messages:
	AuthorizationRequest
	AuthorizationResponse
*/
package authorization

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusResponse int32

const (
	StatusResponse_OK           StatusResponse = 0
	StatusResponse_RENEW        StatusResponse = 1
	StatusResponse_TIMEOUT      StatusResponse = 2
	StatusResponse_ERROR        StatusResponse = 3
	StatusResponse_SERVER_ERROR StatusResponse = 4
)

var StatusResponse_name = map[int32]string{
	0: "OK",
	1: "RENEW",
	2: "TIMEOUT",
	3: "ERROR",
	4: "SERVER_ERROR",
}
var StatusResponse_value = map[string]int32{
	"OK":           0,
	"RENEW":        1,
	"TIMEOUT":      2,
	"ERROR":        3,
	"SERVER_ERROR": 4,
}

func (x StatusResponse) String() string {
	return proto.EnumName(StatusResponse_name, int32(x))
}
func (StatusResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AuthorizationRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *AuthorizationRequest) Reset()                    { *m = AuthorizationRequest{} }
func (m *AuthorizationRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationRequest) ProtoMessage()               {}
func (*AuthorizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthorizationRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthorizationResponse struct {
	Response StatusResponse `protobuf:"varint,1,opt,name=response,enum=StatusResponse" json:"response,omitempty"`
	Guid     string         `protobuf:"bytes,2,opt,name=guid" json:"guid,omitempty"`
}

func (m *AuthorizationResponse) Reset()                    { *m = AuthorizationResponse{} }
func (m *AuthorizationResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationResponse) ProtoMessage()               {}
func (*AuthorizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthorizationResponse) GetResponse() StatusResponse {
	if m != nil {
		return m.Response
	}
	return StatusResponse_OK
}

func (m *AuthorizationResponse) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthorizationRequest)(nil), "AuthorizationRequest")
	proto.RegisterType((*AuthorizationResponse)(nil), "AuthorizationResponse")
	proto.RegisterEnum("StatusResponse", StatusResponse_name, StatusResponse_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Authroization service

type AuthroizationClient interface {
	AuthorizeUser(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*AuthorizationResponse, error)
}

type authroizationClient struct {
	cc *grpc.ClientConn
}

func NewAuthroizationClient(cc *grpc.ClientConn) AuthroizationClient {
	return &authroizationClient{cc}
}

func (c *authroizationClient) AuthorizeUser(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*AuthorizationResponse, error) {
	out := new(AuthorizationResponse)
	err := grpc.Invoke(ctx, "/Authroization/AuthorizeUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Authroization service

type AuthroizationServer interface {
	AuthorizeUser(context.Context, *AuthorizationRequest) (*AuthorizationResponse, error)
}

func RegisterAuthroizationServer(s *grpc.Server, srv AuthroizationServer) {
	s.RegisterService(&_Authroization_serviceDesc, srv)
}

func _Authroization_AuthorizeUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthroizationServer).AuthorizeUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Authroization/AuthorizeUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthroizationServer).AuthorizeUser(ctx, req.(*AuthorizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authroization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Authroization",
	HandlerType: (*AuthroizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthorizeUser",
			Handler:    _Authroization_AuthorizeUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authorization.proto",
}

func init() { proto.RegisterFile("authorization.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0x2d, 0xc9,
	0xc8, 0x2f, 0xca, 0xac, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57,
	0xd2, 0xe1, 0x12, 0x71, 0x44, 0x16, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1,
	0x62, 0x2d, 0xc9, 0xcf, 0x4e, 0xcd, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x94,
	0x22, 0xb8, 0x44, 0xd1, 0x54, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x69, 0x73, 0x71, 0x14,
	0x41, 0xd9, 0x60, 0x1d, 0x7c, 0x46, 0xfc, 0x7a, 0xc1, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x30, 0x25,
	0x41, 0x70, 0x05, 0x42, 0x42, 0x5c, 0x2c, 0xe9, 0xa5, 0x99, 0x29, 0x12, 0x4c, 0x60, 0xa3, 0xc1,
	0x6c, 0x2d, 0x5f, 0x2e, 0x3e, 0x54, 0xf5, 0x42, 0x6c, 0x5c, 0x4c, 0xfe, 0xde, 0x02, 0x0c, 0x42,
	0x9c, 0x5c, 0xac, 0x41, 0xae, 0x7e, 0xae, 0xe1, 0x02, 0x8c, 0x42, 0xdc, 0x5c, 0xec, 0x21, 0x9e,
	0xbe, 0xae, 0xfe, 0xa1, 0x21, 0x02, 0x4c, 0x20, 0x71, 0xd7, 0xa0, 0x20, 0xff, 0x20, 0x01, 0x66,
	0x21, 0x01, 0x2e, 0x9e, 0x60, 0xd7, 0xa0, 0x30, 0xd7, 0xa0, 0x78, 0x88, 0x08, 0x8b, 0x51, 0x20,
	0x17, 0x2f, 0xc8, 0xa1, 0x45, 0xf9, 0x50, 0x87, 0x0a, 0x39, 0x40, 0x04, 0x40, 0x2e, 0x4f, 0x0d,
	0x2d, 0x4e, 0x2d, 0x12, 0x12, 0xd5, 0xc3, 0xe6, 0x6f, 0x29, 0x31, 0x3d, 0xac, 0x1e, 0x54, 0x62,
	0x48, 0x62, 0x03, 0x07, 0x98, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x4a, 0xc8, 0xf7, 0x47,
	0x01, 0x00, 0x00,
}
