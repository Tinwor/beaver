// Code generated by protoc-gen-go.
// source: grpcuser.proto
// DO NOT EDIT!

/*
Package grpcuser is a generated protocol buffer package.

It is generated from these files:
	grpcuser.proto

It has these top-level messages:
	UserRequest
	UserRegister
	RegisterResponse
	LoginResponse
*/
package grpcuser

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusResponse int32

const (
	StatusResponse_OK             StatusResponse = 0
	StatusResponse_USERNAME_EXIST StatusResponse = 1
	StatusResponse_EMAIL_EXIST    StatusResponse = 2
	StatusResponse_FAILED         StatusResponse = 3
	StatusResponse_SERVER_ERROR   StatusResponse = 4
)

var StatusResponse_name = map[int32]string{
	0: "OK",
	1: "USERNAME_EXIST",
	2: "EMAIL_EXIST",
	3: "FAILED",
	4: "SERVER_ERROR",
}
var StatusResponse_value = map[string]int32{
	"OK":             0,
	"USERNAME_EXIST": 1,
	"EMAIL_EXIST":    2,
	"FAILED":         3,
	"SERVER_ERROR":   4,
}

func (x StatusResponse) String() string {
	return proto.EnumName(StatusResponse_name, int32(x))
}
func (StatusResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *UserRequest) Reset()                    { *m = UserRequest{} }
func (m *UserRequest) String() string            { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()               {}
func (*UserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserRegister struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Salt     string `protobuf:"bytes,3,opt,name=salt" json:"salt,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Guid     string `protobuf:"bytes,5,opt,name=guid" json:"guid,omitempty"`
}

func (m *UserRegister) Reset()                    { *m = UserRegister{} }
func (m *UserRegister) String() string            { return proto.CompactTextString(m) }
func (*UserRegister) ProtoMessage()               {}
func (*UserRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserRegister) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserRegister) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserRegister) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *UserRegister) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserRegister) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

type RegisterResponse struct {
	Token  string         `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status StatusResponse `protobuf:"varint,2,opt,name=status,enum=StatusResponse" json:"status,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RegisterResponse) GetStatus() StatusResponse {
	if m != nil {
		return m.Status
	}
	return StatusResponse_OK
}

type LoginResponse struct {
	Token  string         `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status StatusResponse `protobuf:"varint,2,opt,name=status,enum=StatusResponse" json:"status,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetStatus() StatusResponse {
	if m != nil {
		return m.Status
	}
	return StatusResponse_OK
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "UserRequest")
	proto.RegisterType((*UserRegister)(nil), "UserRegister")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
	proto.RegisterEnum("StatusResponse", StatusResponse_name, StatusResponse_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	UserLogin(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	UserNewRegister(ctx context.Context, in *UserRegister, opts ...grpc.CallOption) (*RegisterResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) UserLogin(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/User/UserLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UserNewRegister(ctx context.Context, in *UserRegister, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := grpc.Invoke(ctx, "/User/UserNewRegister", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	UserLogin(context.Context, *UserRequest) (*LoginResponse, error)
	UserNewRegister(context.Context, *UserRegister) (*RegisterResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/UserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UserLogin(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UserNewRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UserNewRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/UserNewRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UserNewRegister(ctx, req.(*UserRegister))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserLogin",
			Handler:    _User_UserLogin_Handler,
		},
		{
			MethodName: "UserNewRegister",
			Handler:    _User_UserNewRegister_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcuser.proto",
}

func init() { proto.RegisterFile("grpcuser.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x52, 0x5d, 0x4f, 0xc2, 0x30,
	0x14, 0x65, 0x30, 0x16, 0xb9, 0xc0, 0x98, 0x37, 0x3e, 0x2c, 0x3c, 0x99, 0xbd, 0x68, 0x34, 0xe9,
	0x03, 0xc6, 0x1f, 0x40, 0x62, 0x4d, 0x88, 0x7c, 0xc4, 0x4e, 0x8c, 0x89, 0x0f, 0x64, 0x4a, 0xb3,
	0x4c, 0x61, 0x9d, 0x6d, 0x17, 0xfe, 0x80, 0x3f, 0xdc, 0xb4, 0x03, 0x02, 0x3e, 0x1a, 0x9f, 0x7a,
	0xcf, 0x3d, 0xf7, 0x9e, 0x9c, 0xf6, 0x14, 0xfc, 0x54, 0x16, 0xef, 0xa5, 0xe2, 0x92, 0x14, 0x52,
	0x68, 0x11, 0x51, 0x68, 0xcf, 0x15, 0x97, 0x8c, 0x7f, 0x95, 0x5c, 0x69, 0xec, 0xc3, 0x89, 0x21,
	0xf3, 0x64, 0xcd, 0x43, 0xe7, 0xdc, 0xb9, 0x6c, 0xb1, 0x3d, 0x36, 0x5c, 0x91, 0x28, 0xb5, 0x11,
	0x72, 0x19, 0xd6, 0x2b, 0x6e, 0x87, 0xa3, 0x6f, 0x07, 0x3a, 0x95, 0x4e, 0x9a, 0x29, 0xcd, 0xe5,
	0x5f, 0x85, 0x10, 0xc1, 0x55, 0xc9, 0x4a, 0x87, 0x0d, 0xdb, 0xb7, 0x35, 0x9e, 0x41, 0x93, 0xaf,
	0x93, 0x6c, 0x15, 0xba, 0xb6, 0x59, 0x01, 0x33, 0x99, 0x96, 0xd9, 0x32, 0x6c, 0x56, 0x93, 0xa6,
	0x8e, 0x1e, 0x21, 0xd8, 0x39, 0x60, 0x5c, 0x15, 0x22, 0x57, 0xdc, 0x6c, 0x6b, 0xf1, 0xc9, 0xf3,
	0xad, 0x8d, 0x0a, 0xe0, 0x05, 0x78, 0x4a, 0x27, 0xba, 0x54, 0xd6, 0x81, 0x3f, 0xe8, 0x91, 0xd8,
	0xc2, 0xdd, 0x1a, 0xdb, 0xd2, 0xd1, 0x14, 0xba, 0x63, 0x91, 0x66, 0xf9, 0x3f, 0xe9, 0x5d, 0xbd,
	0x82, 0x7f, 0xcc, 0xa0, 0x07, 0xf5, 0xd9, 0x43, 0x50, 0x43, 0x04, 0x7f, 0x1e, 0x53, 0x36, 0x1d,
	0x4e, 0xe8, 0x82, 0xbe, 0x8c, 0xe2, 0xa7, 0xc0, 0xc1, 0x1e, 0xb4, 0xe9, 0x64, 0x38, 0x1a, 0x6f,
	0x1b, 0x75, 0x04, 0xf0, 0xee, 0x87, 0xa3, 0x31, 0xbd, 0x0b, 0x1a, 0x18, 0x40, 0x27, 0xa6, 0xec,
	0x99, 0xb2, 0x05, 0x65, 0x6c, 0xc6, 0x02, 0x77, 0xf0, 0x01, 0xae, 0x49, 0x01, 0xaf, 0xa1, 0x65,
	0x4e, 0x6b, 0x1c, 0x3b, 0xe4, 0x20, 0xe1, 0xbe, 0x4f, 0x8e, 0xae, 0x13, 0xd5, 0xf0, 0x16, 0x7a,
	0x66, 0x60, 0xca, 0x37, 0xfb, 0xf4, 0xba, 0xe4, 0x30, 0xcc, 0xfe, 0x29, 0xf9, 0xfd, 0xaa, 0x51,
	0xed, 0xcd, 0xb3, 0x1f, 0xe8, 0xe6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x27, 0x65, 0x98, 0x8a, 0x52,
	0x02, 0x00, 0x00,
}
